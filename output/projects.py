# -*- coding: utf-8 -*-

import pandas as pd
from collections import OrderedDict

def save(df, filebase):
    df.to_csv(filebase + ".csv", sep = ";", index = False)
    df.to_excel(filebase + ".xlsx", index = False)

df0 = pd.read_csv("projects.csv", sep = ";")


#
#   Create files with fewer columns
#

rename =  OrderedDict([
 ('year', 'year'), 
 ('okved1', 'okved1'), 
 ('region', 'region'), 
 ('title', 'title'),
 ('inn', 'inn'), 
 ('1110', '1110'),
 ('1120', '1120'),
 ('1130', '1130'),
 ('1140', '1140'),
 ('1150', 'of'),   # основные средства
 ('1160', '1160'),
 ('1170', '1170'),
 ('1180', '1180'),
 ('1190', '1190'),
 ('1100', 'ta_fix'), #внеоборотные активы

 ('1210', '1210'),
 ('1220', '1220'),
 ('1230', '1230'),
 ('1240', '1240'),
 ('1250', '1250'),
 ('1260', '1260'),
 ('1200', 'ta_nonfix'), #оборотные активы

 ('1600', 'ta'), # активы всего

 ('1310', '1310'),
 ('1320', '1320'),
 ('1340', '1340'),
 ('1350', '1350'),
 ('1360', '1360'),
 ('1370', '1370'),
 ('1300', 'tp_cap'), # капитал

 ('1410', 'debt_long'), # долгосрочные займы
 ('1420', '1420'),
 ('1430', '1430'),
 ('1450', '1450'),
 ('1400', 'tp_long'), #долгосрочные обязательства 

 ('1510', 'debt_short'), # кракосрочные займы
 ('1520', '1520'),
 ('1530', '1530'),
 ('1540', '1540'),
 ('1550', '1550'),
 ('1500', 'tp_short'), #краткосрочные обязательства 
 
 ('1700', 'tp'),    # пассивы всего 
 
 ('2110', 'sales'), # выручка
 ('2120', '2120'),
 ('2100', '2100'),
 ('2210', '2210'),
 ('2220', '2220'),
 ('2200', '2200'),
 ('2310', '2310'),
 ('2320', '2320'),
 ('2330', 'exp_interest'), # процентные платежи 
 ('2340', '2340'),
 ('2350', '2350'),
 ('2300', '2300'),

 ('2410', '2410'),
 ('2421', '2421'),
 ('2430', '2430'),
 ('2450', '2450'),
 ('2460', '2460'),
 ('2400', '2400'),

 ('2510', '2510'),
 ('2520', '2520'),
 ('2500', '2500'),

 ('4110', 'cash_oper_inflow'),        # поступления вего 
 ('4111', 'cash_oper_inflow_sales'),  # поступления от продаж
 ('4112', '4112'),
 ('4113', '4113'),
 ('4119', '4119'),
 ('4120', '4120'),
 ('4121', 'paid_to_supplier'),  # платежи поставщикам
 ('4122', 'paid_to_worker'),    # платежи работникам
 ('4123', 'cash_interest'),     # процентные платежи  
 ('4124', '4124'),
 ('4129', '4129'),
 ('4100', '4100'),

 ('4210', '4210'),
 ('4211', '4211'),
 ('4212', '4212'),
 ('4213', '4213'),
 ('4214', '4214'),
 ('4219', '4219'),
 ('4220', '4220'),
 ('4221', '4221'),
 ('4222', '4222'),
 ('4223', '4223'),
 ('4224', '4224'),
 ('4229', '4229'),
 ('4200', '4200'),

 ('4310', '4310'),
 ('4311', '4311'),
 ('4312', '4312'),
 ('4313', '4313'),
 ('4314', '4314'),
 ('4319', '4319'),
 ('4320', '4320'),
 ('4321', '4321'),
 ('4322', '4322'),
 ('4323', '4323'),
 ('4329', '4329'),
 ('4300', '4300'),

 ('4400', '4400'),

 ('4490', '4490')]) # изменение, связанное с курсовой переоценкой
           

sub = OrderedDict([(k,v) for k,v in rename.items() if k!=v])      
my_cols = ['year', 'okved1', 'region', 'title',  'inn'] + [x for x in sub.keys()]
data_cols =  [x for x in sub.values()]

df = df0[my_cols].rename(columns=sub)
for col in data_cols:
    df[col] = (df[col] / 10 ** 6).round(1) 

# активы = пассивы  
flag1 = df.ta-df.tp
assert all(flag1==0)

# внеоборотные активы + оборотные активы = активы
flag2 = df.ta_fix + df.ta_nonfix - df.ta
assert abs(flag2).sum() < 10

# капитал + долгосрочные обязательства + краткосрочные обязательства = всего пассивы
flag3 = df.tp_cap+df.tp_short+df.tp_long-df.tp
assert abs(flag3).sum() < 10  
 
# 
# WARNING:
#     df may have duplicate rows
#
 
save(df, "projects_compact")
df = df.set_index('inn')

# ======================================================
#
#   Analysis of projects
#
# ======================================================


def hist(ts, bins=20):
    pd.DataFrame.hist(pd.DataFrame(ts), bins=bins)
    

# Фондоотдача
y = df.sales/df.of
y = y[y<1]
hist(y)
y = y[y>0.01]
hist(y)

# Процентные ставки   
ir = df.cash_interest/(df.debt_long + df.debt_short) 
hist(ir)
ir = ir[ir>0.01] 
hist(ir)

# dscr
ebitda_proxy = df.cash_oper_inflow - df.paid_to_supplier - df.paid_to_worker 
dscr = df.cash_interest / ebitda_proxy 
dscr = dscr[(abs(dscr) < 1000) & (abs(dscr) > 0.001)]
hist(dscr, bins=40)

# ФОТ и занятость 
fot = df.paid_to_worker.sum()
salary = 29792
ean=75528903
n = fot *10 ** 9 / (29792 * 12)
print (str(round(n/ean*100,2)) + "%") 

# оценка добавленной стоимости
va = df.cash_oper_inflow_sales - df.paid_to_supplier
print(va.sum())
# 60.699999999999989

# основные средства
print(df.of.sum())

#todo:
#     need participation share   

# -----------------------------------------------------------------------------